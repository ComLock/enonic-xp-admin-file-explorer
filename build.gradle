plugins {
	id 'java' // Needed for assemble and build
	id 'com.enonic.xp.app' version '3.5.0'
	// id 'com.moowork.node' version '1.3.1'
	id 'com.github.node-gradle.node' version '7.0.2'
}


repositories {
	mavenLocal()
	jcenter()
	xp.enonicRepo()
	maven {
		url 'http://repo.enonic.com/public'
		// url 'https://dl.bintray.com/openxp/public'
		// url 'https://openxp.jfrog.io/artifactory/public'
		url "https://oss.jfrog.org/artifactory/oss-release-local"
	}
}


wrapper {
	distributionUrl = "${gradleDistributionUrl}"
}


app {
	name = project.appName
	displayName = 'File Explorer'
	vendorName = 'Enonic AS'
	vendorUrl = 'http://enonic.com'
	systemVersion = "${xpVersion}"
}


dependencies {
	implementation "com.enonic.xp:core-api:${xpVersion}"
	implementation "com.enonic.xp:portal-api:${xpVersion}"

	//──────────────────────────────────────────────────────────────────────────
	// Core libs (com.enonic.xp)
	//──────────────────────────────────────────────────────────────────────────

	include "com.enonic.xp:lib-admin:${xpVersion}"
	include "com.enonic.xp:lib-auth:${xpVersion}"
	//include "com.enonic.xp:lib-content:${xpVersion}"
	//include "com.enonic.xp:lib-context:${xpVersion}"
	//include "com.enonic.xp:lib-i18n:${xpVersion}"
	//include "com.enonic.xp:lib-io:${xpVersion}"
	//include "com.enonic.xp:lib-mail:${xpVersion}"
	//include "com.enonic.xp:lib-mustache:${xpVersion}"
	include "com.enonic.xp:lib-portal:${xpVersion}"
	//include "com.enonic.xp:lib-repo:${xpVersion}"
	//include "com.enonic.xp:lib-task:${xpVersion}"
	//include "com.enonic.xp:lib-thymeleaf:${xpVersion}"
	//include "com.enonic.xp:lib-websocket:${xpVersion}"
	//include "com.enonic.xp:lib-xslt:${xpVersion}"

	//──────────────────────────────────────────────────────────────────────────
	// Other enonic libs (com.enonic.lib)
	//──────────────────────────────────────────────────────────────────────────

	//include "com.enonic.lib:lib-admin-ui:${libAdminUiVersion}"
	//include 'com.enonic.lib:lib-cache:1.1.0'
	//include 'com.enonic.lib:lib-http-client:1.0.1'
	include 'com.enonic.lib:lib-router:2.0.0'
	//include 'com.enonic.lib:menu:1.3.3'
	include 'com.enonic.lib:lib-util:2.0.0'

	// include 'openxp.lib:filesystem:0.9.6'
	// implementation 'openxp.lib:filesystem:0.9.6'
	include 'openxp.lib:filesystem:2.0.0-SNAPSHOT'
	// implementation group: 'openxp.lib', name: 'filesystem', version: '0.9.6'
}


node {
	version = '20.16.0'
	download = true
}


sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources { // Paths relative to src/main/resources
			exclude '**/*.es' // Avoid having your es files copied into ./build
		}
	}
}


task webpack(type:NodeTask) {
	dependsOn npmInstall
	script = file('node_modules/webpack-cli/bin/cli.js')
	args = [
		'--color',
		'--config', 'webpack.config.babel.js'
	]
	outputs.dir './build/resources/main' // processResources will delete the directory if this is not present
}


processResources {
	dependsOn webpack
	mustRunAfter webpack

	exclude '**/.gitkeep'

	// Let webpack handle these (rather than gradle)
	exclude '**/*.css'
	exclude '**/*.es'
	//exclude '**/*.ico'
	exclude '**/*.js'
	exclude '**/*.jsx'
	exclude '**/*.less'
	exclude '**/*.sass'
	exclude '**/*.scss'
	//exclude '**/*.svg'
	exclude '**/*.styl'
	//exclude '**/*.xml'
}


task watch(type:NodeTask) {
	script = file('node_modules/webpack-cli/bin/cli.js')
	args = [
		'--color',
		'--config', 'webpack.config.babel.js',
		'--watch'
	]
}
